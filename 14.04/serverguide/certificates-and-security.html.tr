<!DOCTYPE html>
<html lang=tr>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Sertifikalar</title>
<link rel="stylesheet" type="text/css" href="tr.css">
<script type="text/javascript" src="jquery.js"></script><script type="text/javascript" src="jquery.syntax.js"></script><script type="text/javascript" src="yelp.js"></script>
</head>
<body id="home">
<script src="https://ssl.google-analytics.com/urchin.js" type="text/javascript"></script><script type="text/javascript">
        _uacct = "UA-1018242-8";
        urchinTracker();
      </script><div id="container">
<div id="container-inner">
<div id="mothership"><ul>
<li><a href="http://www.ubuntu.com/partners">Partners</a></li>
<li><a href="http://www.ubuntu.com/support">Support</a></li>
<li><a href="http://www.ubuntu.com/community">Community</a></li>
<li><a href="http://www.ubuntu.com">Ubuntu.com</a></li>
</ul></div>
<div id="header">
<h1 id="ubuntu-header"><a href="https://help.ubuntu.com/">Ubuntu Documentation</a></h1>
<ul id="main-menu">
<li><a class="main-menu-item current" href="../../">Official Documentation</a></li>
<li><a href="https://help.ubuntu.com/community/CommunityHelpWiki">Community Help Wiki</a></li>
<li><a href="http://community.ubuntu.com/contribute/documentation/">Contribute</a></li>
</ul>
</div>
<div id="menu-search"><div id="search-box">
<noscript><form action="https://www.google.com/cse" id="cse-search-box"><div>
<input type="hidden" name="cx" value="003883529982892832976:e2vwumte3fq"><input type="hidden" name="ie" value="UTF-8"><input type="text" name="q" size="21"><input type="submit" name="sa" value="Search">
</div></form></noscript>
<script>
                document.write('<form action="../../search.html" id="cse-search-box">');
                document.write('  <div>');
                document.write('    <input type="hidden" name="cof" value="FORID:9">');
                document.write('    <input type="hidden" name="cx" value="003883529982892832976:e2vwumte3fq">');
                document.write('    <input type="hidden" name="ie" value="UTF-8">');
                document.write('    <input type="text" name="q" size="21">');
                document.write('    <input type="submit" name="sa" value="Search">');
                document.write('  </div>');
                document.write('</form>');
              </script>
</div></div>
<div class="trails"><div class="trail">
<a href="../../14.04" class="trail">Ubuntu 14.04</a> » <a class="trail" href="index.html" title="Ubuntu Sunucu Rehberi">Ubuntu Sunucu Rehberi</a> » <a class="trail" href="security.html" title="Güvenlik">Güvenlik</a> » </div></div>
<div id="cwt-content" class="clearfix content-area"><div id="page">
<div id="content">
<div class="links nextlinks">
<a class="nextlinks-prev" href="apparmor.html" title="AppArmor">Önceki</a><a class="nextlinks-next" href="ecryptfs.html" title="eCryptfs">Sonraki</a>
</div>
<div class="hgroup"><h1 class="title">Sertifikalar</h1></div>
<div class="region">
<div class="contents">
<p class="para">Bugün için en yaygın şifreleme formlarından biri <span class="em emphasis">genel anahtar</span> şifrelemesidir. Genel anahtar şifrelemesi, bir <span class="em emphasis">genel anahtar</span> ve bir <span class="em emphasis">özel anahtar</span> kullanır. Sistem genel anahtarı kullanarak bilgiyi <span class="em emphasis">şifreleyerek</span> çalışır. Ardından bilgi sadece özel anahtar kullanılarak <span class="em emphasis">çözülür</span>.</p>
<p class="para">
            A common use for public-key cryptography is encrypting application traffic using a Secure Socket Layer (SSL) or 
            Transport Layer Security (TLS) connection. One example: configuring Apache to provide <span class="em emphasis">HTTPS</span>, the
            HTTP protocol over SSL. This allows a way to encrypt traffic using a protocol that does not itself provide encryption.
            </p>
<p class="para">
            A <span class="em emphasis">Certificate</span> is a method used to distribute a <span class="em emphasis">public key</span> and other information
            about a server and the organization who is responsible for it. Certificates can be digitally signed by a 
            <span class="em emphasis">Certification Authority</span>, or CA. A CA is a trusted third party that has confirmed that the information
            contained in the certificate is accurate.
            </p>
</div>
<div class="links sectionlinks" role="navigation"><ul>
<li class="links"><a class="xref" href="certificates-and-security.html#types-of-certificates" title="Sertifika Türleri">Sertifika Türleri</a></li>
<li class="links"><a class="xref" href="certificates-and-security.html#generating-a-csr" title="Sertifika İmzalı İstek (CSR) Oluşturma">Sertifika İmzalı İstek (CSR) Oluşturma</a></li>
<li class="links"><a class="xref" href="certificates-and-security.html#creating-a-self-signed-certificate" title="Kendi İmzalı Sertifika Oluşturma">Kendi İmzalı Sertifika Oluşturma</a></li>
<li class="links"><a class="xref" href="certificates-and-security.html#installing-the-certificate" title="Sertifika Yükleme">Sertifika Yükleme</a></li>
<li class="links"><a class="xref" href="certificates-and-security.html#certificate-authority" title="Sertifika Yetkisi">Sertifika Yetkisi</a></li>
<li class="links"><a class="xref" href="certificates-and-security.html#certificate-references" title="Başvurular">Başvurular</a></li>
</ul></div>
<div class="sect2 sect" id="types-of-certificates"><div class="inner">
<div class="hgroup"><h2 class="title">Sertifika Türleri</h2></div>
<div class="region"><div class="contents">
<p class="para">Genel anahtar şifrelemesini kullanarak güvenli bir sunucu ayarlamak için, çoğu durumlarda, genel sertifikanın bulunduğu sertifika isteğini şirketin kimlik denetleyicisine göndererek ve CA'dan alarak sağlarsın. CA sertifika isteğini ve kimliğini doğrular, ardından güvenlik sunucun için sertifikayı sana gönderir. Alternatif olarak <span class="em emphasis">kendi imzalı</span> sertifikanı oluşturabilirsin.</p>
<div class="note" title="Not"><div class="inner"><div class="region"><div class="contents">
              <p class="para">
              Note that self-signed certificates should not be used in most production environments.
              </p>
            </div></div></div></div>
<p class="para">HTTPS örneğine devam ederek, bir CA imzalı sertifika, biri kendi imzalı olmayan iki önemli yeterlilik sağlar:</p>
<div class="list itemizedlist"><ul class="list itemizedlist">
<li class="list itemizedlist">
            <p class="para">Genellikle tarayıcılar otomatik olarak sertifikayı teşhis eder ve kullanıcı müdahalesi olmaksızın güvenli bağlantıya izin verir.</p>
            </li>
<li class="list itemizedlist">
            <p class="para">CA imzalı sertifika bildirdiğinde, tarayıcıda web sayfalarının açıldığı organizasyonun kimliğini garantinaya alır.</p>
            </li>
</ul></div>
<p class="para">
             Most Web browsers, and computers, that support SSL have a list of CAs whose
             certificates they automatically accept. If a browser
             encounters a certificate whose authorizing CA is not in the
             list, the browser asks the user to either accept or decline
             the connection. Also, other applications may generate an error message when using
             a self-signed certificate.
            </p>
<p class="para">CA'dan sertifika alma oldukça basit bir iştir. Hızlı görünümü şöyledir:</p>
<div class="list orderedlist"><ol class="list orderedlist">
<li class="list orderedlist">
               <p class="para">Özel ve genel şifreleme anahtar çifti oluşturun.</p>
            </li>
<li class="list orderedlist">
                 <p class="para">Genel ve özel şifreleme anahtar çifti oluştur.</p>
            </li>
<li class="list orderedlist">
                 <p class="para">Sertifika isteğini, kimlik bilgilerini de içeren bir belge ile birlikte CA'ya gönder. Hangi sertifika yetkilisini seçeceğini söyleyemeyiz. Geçmiş tecrübelerinden faydalanarak veya tecrübeli arkadaşlarından veya meslektaşlarından ya da sadece maddi faktörleri kullanarak kendi kararını vermelisin.</p>

                    <p class="para">Alacağın CA'yı kararlaştırdıktan sonra, sertifikayı onlardan almak için sana verecekleri yönergeleri takip etmelisin.</p>
            </li>
<li class="list orderedlist">
               <p class="para">Olmasını istediğin CA'yı belirledikten sonra onlar sana dijital bir sertifika gönderecekler.</p>
            </li>
<li class="list orderedlist">
              <p class="para">Bunu güvenlik sunucuna yükle ve sertifikayı kullanmak için uygun olan uygulamayı yapılandır.</p>
            </li>
</ol></div>
</div></div>
</div></div>
<div class="sect2 sect" id="generating-a-csr"><div class="inner">
<div class="hgroup"><h2 class="title">Sertifika İmzalı İstek (CSR) Oluşturma</h2></div>
<div class="region"><div class="contents">
<p class="para">İster CA'dan aldığın bir sertifika, isterse kendi imzalı oluşturduğun sertifikan olsun ilk adım, bir anahtar oluşturmaktır.</p>
<p class="para">       
          If the certificate will be used by service daemons, such as Apache, Postfix, Dovecot, etc., 
          a key without a passphrase is often appropriate. Not having a passphrase allows the services
          to start without manual intervention, usually the preferred way to start a daemon.
          </p>
<p class="para">Bu bölüm şifreli ve şifresiz anahtar oluşturmayı içerir. Ardından şifresiz anahtar çeşitli servis programları ile kullanılabilen sertifika oluşturmak için kullanılacak.</p>
<div class="note note-warning" title="Uyarı"><div class="inner"><div class="region"><div class="contents">
            <p class="para">Güvenlik sunucunu şifresiz çalıştırma uygundur. Çünkü güvenlik sunucunu her başlattığında şifre girmene gerek kalmayacak. Fakat bu güvensizdir ve sunucunu tehlikeye attığı gibi anahtarını da tehlikeye atar.</p>
          </div></div></div></div>
<p class="para">Sertifika İmzalı İstek (CSR) için <span class="em emphasis">anahtar</span> oluşturmak için terminalden şu komutu çalıştırın:</p>
<div class="screen"><pre class="contents "><span class="cmd command">openssl genrsa -des3 -out server.key 2048</span>
</pre></div>
<div class="code"><pre class="contents ">Generating RSA private key, 2048 bit long modulus
..........................++++++
.......++++++
e is 65537 (0x10001)
Enter pass phrase for server.key:
</pre></div>
<p class="para">Şimdi şifreni girebilirsin. En iyi güvenlik için en az sekiz karakter uzunluğunda olmalıdır. -des3'ü tanımladığında en az uzunluk dört karakterdir. Sayı ve/veya noktalama içermeli ve sözlükteki bir cümle olmamalı. Ayrıca büyük/küçük harfe duyarlı olduğunu da hatırla.</p>
<p class="para">Doğrulamak için şifreyi tekrar yazın. Eğer tekrarın doğruysa sunucu anahtarın oluşturulur ve <span class="file filename">server.key</span> dosyasında depolanır.</p>
<p class="para">Şimdi şifre olmadan güvensiz anahtar oluşturun ve anahtar adlarını karıştırın:</p>
<div class="screen"><pre class="contents "><span class="cmd command">openssl rsa -in server.key -out server.key.insecure</span>
<span class="cmd command">mv server.key server.key.secure</span>
<span class="cmd command">mv server.key.insecure server.key</span>
</pre></div>
<p class="para">Şu an güvensiz anahtar <span class="file filename">server.key</span> adındadır ve şifresiz olarak SCR oluşturmak için bu dosyayı kullanabilirsin.</p>
<p class="para">CSR oluşturmak için terminalden şu komutu çalıştırın:</p>
<div class="screen"><pre class="contents "><span class="cmd command">openssl req -new -key server.key -out server.csr</span>
</pre></div>
<p class="para">Parolanızı girmeniz istenecektir. Eğer doğru parolayı girerseniz, Şirket Adı, Site Adı, E-Posta, vb. şeyleri girmeniz istenecektir. tüm bu ayrıntıları girdikten sonra, CSR'niz oluşturulacak <span class="file filename">server.csr</span> dosyasına kaydedilecektir.</p>
<p class="para">Şimdi bu CSR dosyasını işlenmesi için bir CA'ya arz edebilirsin. CA, bu CSR dosyasını ve sertifikayı kullanacak. Diğer taraftan bu CSR'yi kullanarak kendi imzalı sertifikanı oluşturabilirsin.</p>
</div></div>
</div></div>
<div class="sect2 sect" id="creating-a-self-signed-certificate"><div class="inner">
<div class="hgroup"><h2 class="title">Kendi İmzalı Sertifika Oluşturma</h2></div>
<div class="region"><div class="contents">
<p class="para">Kendi imzalı sertifikanı oluşturmak için terminalden şu komutu çalıştırın:</p>
<div class="screen"><pre class="contents "><span class="cmd command">openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</span>
</pre></div>
<p class="para">Yukarıdaki komut senden bir şifre girmeni isteyecektir. Doğru şifreyi girdikten sonra sertifikan oluşturulacak ve <span class="file filename">server.crt</span> dosyasında depolanacaktır.</p>
<div class="note note-warning" title="Uyarı"><div class="inner"><div class="region"><div class="contents">
        <p class="para">Eğer güvenlik sunucun ürün ortamında kullanılırsa, muhtemelen sana bir CA imzalı sertifika gerekecektir. Kendi imzalı sertifikanı kullanman tavsiye edilmez.</p>
        </div></div></div></div>
</div></div>
</div></div>
<div class="sect2 sect" id="installing-the-certificate"><div class="inner">
<div class="hgroup"><h2 class="title">Sertifika Yükleme</h2></div>
<div class="region"><div class="contents">
<p class="para"><span class="file filename">server.key</span> anahtar dosyasını ve <span class="file filename">server.crt</span> sertifika dosyasını veya CA tarafından aktarılan sertifika dosyasını terminalden şu komut çalıştırılarak yükleyebilirsin:</p>
<div class="screen"><pre class="contents "><span class="cmd command">sudo cp server.crt /etc/ssl/certs</span>
<span class="cmd command">sudo cp server.key /etc/ssl/private</span>
</pre></div>
<p class="para">Şimdi <span class="em emphasis">Sertifika</span> ve <span class="em emphasis">anahtar</span> dosyalarını kullanmak için genel anahtar şifrelemesini kullanarak herhangi uygulamayı yapılandırın. Örneğin, <span class="app application">Apache</span> HTTPS'yi temin ederken , <span class="app application">Dovecot</span> da IMAPS ve POP3S vb. temin edebilir.</p>
</div></div>
</div></div>
<div class="sect2 sect" id="certificate-authority"><div class="inner">
<div class="hgroup"><h2 class="title">Sertifika Yetkisi</h2></div>
<div class="region"><div class="contents">
<p class="para">Eğer ağındaki servisler birkaç kendi imzalı sertifikandan başka gerektiriyorsa, kendi dahili <span class="em emphasis">Sertifika Yetkisi (CA)</span>ni kurmak için daha fazla gayret gerekir. Kendi CA tarafından oluşturduğun imzalı sertifikalar kullanmayla, diğer servislere  kolayca güvenerek aynı CA'daki sertifikaları kullanarak sağlayabilirsin.</p>
<div class="steps"><div class="inner"><ol class="steps">
<li class="steps">
  
              <p class="para">İlk önce CA sertifikasını saklamak için dizin oluşturun ve dosyaları yerleştirin:</p>    

<div class="screen"><pre class="contents "><span class="cmd command">sudo mkdir /etc/ssl/CA</span>
<span class="cmd command">sudo mkdir /etc/ssl/newcerts</span>
</pre></div>

            </li>
<li class="steps">
  
              <p class="para">CA, işlem yapmak için birkaç ek dosyaya ihtiyaç duyar. Biri, CA tarafından kullanılan, her sertifikanın eşsiz seri numarasına sahip olması gereken son seri numaralarının parçalarını tutmak için, diğer dosya da hangi sertifikanın bildirildiğini kayıt etmek içindir.</p>    

<div class="screen"><pre class="contents "><span class="cmd command">sudo sh -c "echo '01' &gt; /etc/ssl/CA/serial"</span>
<span class="cmd command">sudo touch /etc/ssl/CA/index.txt</span>
</pre></div>

            </li>
<li class="steps">
  
              <p class="para">Üçüncü dosya CA yapılandırma dosyasıdır. Her ne kadar gerekmezse bile, çoklu sertifika bildiriminde çok uygundur. <span class="file filename">/etc/ssl/openssl.cnf</span>'yi düzenleyin ve <span class="em emphasis">[ CA_default ]</span>'u şöyle değiştirin:</p>    

<div class="code"><pre class="contents ">dir             = /etc/ssl/             # Her şeyin saklandığı yer
database        = $dir/CA/index.txt     # veritabanı içerik dosyası.
certificate     = $dir/certs/cacert.pem # CA sertifikası
serial          = $dir/CA/serial        # Mevcut seri numarası
private_key     = $dir/private/cakey.pem# Özel anahtar
</pre></div>    

            </li>
<li class="steps">
  
              <p class="para">
              Next, create the self-signed root certificate:
              </p>    

<div class="screen"><pre class="contents "><span class="cmd command">openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650</span>
</pre></div>

              <p class="para">Ardından sertifika ile ilgili ayrıntıları girmeniz istenecektir.</p>

            </li>
<li class="steps">
  
              <p class="para">Şimdi kök sertifika ve anahtarı yükleyin:</p>    

<div class="screen"><pre class="contents "><span class="cmd command">sudo mv cakey.pem /etc/ssl/private/</span>
<span class="cmd command">sudo mv cacert.pem /etc/ssl/certs/</span>
</pre></div>

            </li>
<li class="steps">
  
              <p class="para">Şu an sertifikayı başlatmaya hazırsın. Gereken ilk şey Sertifika İmza İsteği (CSR)'dir. Ayrıntılar için <a class="xref" href="certificates-and-security.html#generating-a-csr" title="Sertifika İmzalı İstek (CSR) Oluşturma">Sertifika İmzalı İstek (CSR) Oluşturma</a>'ye bakınız. Bir CSR aldıktan sonra CA tarafından imzalanan bir sertifika oluşturmak için şunu giriniz:</p>    

<div class="screen"><pre class="contents "><span class="cmd command">sudo openssl ca -in server.csr -config /etc/ssl/openssl.cnf</span>
</pre></div>

              <p class="para">CA anahtarı için şifreyi girdikten sonra, sertifikayı açabilecek ve yeni sertifika oluşturacaksın. Ardından sertifika oluşturmanın ilgili çıktısının daha büyük miktarını göreceksin.</p>

            </li>
<li class="steps">   

              <p class="para">
              There should now be a new file, <span class="file filename">/etc/ssl/newcerts/01.pem</span>, containing the same output. 
              Copy and paste everything beginning with the line: <span class="em emphasis">-----BEGIN CERTIFICATE-----</span> and 
              continuing through the line: <span class="em emphasis">----END CERTIFICATE-----</span> lines to a file named after the hostname 
              of the server where the certificate will be installed. For example <span class="file filename">mail.example.com.crt</span>,
              is a nice descriptive name.
              </p>

              <p class="para">Sonraki sertifikalar <span class="file filename">02.pem</span>, <span class="file filename">03.pem</span>, vb. şekilde adlandırılacaktır.</p>

              <div class="note" title="Not"><div class="inner"><div class="region"><div class="contents">
                <p class="para"><span class="em emphasis">mail.ubuntu-tr.org.crt</span>'yi kendi açıklayıcı adınla değiştirin.</p>
              </div></div></div></div>

            </li>
<li class="steps">
  
              <p class="para">Son olarak, yeni sertifikayı gerekli olan ana sisteme kopyalayın  ve kullanmak için uygun uygulamayı yapılandırın. Sertifika yüklemek için mevcut yer <span class="file filename">/etc/ssl/certs</span>'dir. Bu, aynı sertifikayı fazla karmaşık dosya izinleri olmadan kullanan çoklu servisleri etkinleştirir.</p>    

              <p class="para">Bir CA sertifikası kullanılarak yapılandırılabilen uygulamalar için ayrıca <span class="file filename">/etc/ssl/certs/cacert.pem</span> dosyasını herbir sunucudaki <span class="file filename">/etc/ssl/certs/</span> dizinine kopyalayın.</p>

            </li>
</ol></div></div>
</div></div>
</div></div>
<div class="sect2 sect" id="certificate-references"><div class="inner">
<div class="hgroup"><h2 class="title">Başvurular</h2></div>
<div class="region"><div class="contents"><div class="list itemizedlist"><ul class="list itemizedlist">
<li class="list itemizedlist">
              <p class="para">
              For more detailed instructions on using cryptography see the
              <a href="http://tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html" class="ulink" title="http://tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html">SSL Certificates HOWTO</a> by tldp.org:
              </p>
            </li>
<li class="list itemizedlist">
              <p class="para">
              The Wikipedia <a href="http://en.wikipedia.org/wiki/HTTPS" class="ulink" title="http://en.wikipedia.org/wiki/HTTPS">HTTPS</a> page has more information regarding HTTPS.
              </p>
            </li>
<li class="list itemizedlist">
              <p class="para"><span class="em emphasis">OpenSSL</span> hakkında daha fazla bilgi için <a href="http://www.openssl.org/" class="ulink" title="http://www.openssl.org/">OpenSSL Ana Sayfası</a>na bakınız.</p>
            </li>
<li class="list itemizedlist">
              <p class="para">
              Also, O'Reilly's <a href="http://oreilly.com/catalog/9780596002701/" class="ulink" title="http://oreilly.com/catalog/9780596002701/">Network Security with OpenSSL</a> is a good
              in-depth reference.
              </p>
            </li>
</ul></div></div></div>
</div></div>
</div>
<div class="links nextlinks">
<a class="nextlinks-prev" href="apparmor.html" title="AppArmor">Önceki</a><a class="nextlinks-next" href="ecryptfs.html" title="eCryptfs">Sonraki</a>
</div>
<div class="clear"></div>
</div>
<div id="pagebottom"></div>
</div></div>
</div>
<div id="footer"><p>The material in this document is available under a free license, see <a href="../../legal.html">Legal</a> for details.<br>
          For information on contributing see the <a href="https://wiki.ubuntu.com/DocumentationTeam">Ubuntu Documentation Team wiki page</a>.
          To report errors in this serverguide documentation, <a href="https://bugs.launchpad.net/serverguide">file a bug report</a>.</p></div>
</div>
</body>
</html>
